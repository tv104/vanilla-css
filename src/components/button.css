/* @layer ensures explicit cascade order relative to base/utility styles */
@layer components {
  /* @scope ensures styles are encapsulated to the component */
  @scope (.btn-container) {
    /* container-type sets the type of @container context */
    container-type: inline-size;

    button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 0.375rem;
      font-weight: 500;
      cursor: pointer;
      width: 100%;
      flex: none;

      /* adapt based on available space defined in the container-type */
      @container (min-width: 600px) {
        width: auto;
      }
    }

    .btn--primary {
      /* the value type doesn't match the property declaration, so it will fallback to initial-value */
      --action-primary: "invalid value";
      background-color: var(--action-primary);
      color: var(--content-inverse);
      
      &:hover {
        background-color: var(--action-primary-hover);
      }
      
      &:active {
        background-color: var(--action-primary-pressed);
      }
    }
  }
}